{"version":3,"file":"static/js/399.392aae72.chunk.js","mappings":"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","sources":["components/PhoneBookComponents/ContactList/ContactItem/ContactItem.styled.jsx","components/PhoneBookComponents/ContactList/ContactItem/ContactItem.jsx","components/PhoneBookComponents/ContactList/ContactList.styled.jsx","components/PhoneBookComponents/ContactList/ContactList.jsx","components/PhoneBookComponents/Filter/Filter.styled.jsx","components/PhoneBookComponents/Filter/Filter.jsx","components/Section/Section.jsx","components/PhoneBookComponents/Form/Form.styled.jsx","redux/Selectors.js","components/PhoneBookComponents/Form/FormHoocks.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Button = styled.button`\ncursor: pointer;\ntext-align: center;\nwidth: 50px;\nbackground-color: #fff;\nborder: none;\nborder-radius: 4px;\nmargin-left: 5px;\nborder: 1px solid rgba(33, 33, 33, 0.2);\noutline: 1px transparent;\n`\n\nexport const Item = styled.span`\nmargin-right: 5px;\n`\n","import PropTypes from 'prop-types';\nimport { Button, Item} from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Operations';\n\nexport const ContactItem = ({ contact }) => {\n const dispatch = useDispatch();\n  const { id, name, phone } = contact;\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n       <li>\n        <span>{name}</span>: <Item>{phone}</Item>\n\n        <Button type=\"button\" onClick={handleDelete}>\n          Delete\n        </Button>\n      </li>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n  }),\n};","import styled from '@emotion/styled'\n\nexport const Contactlist = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`","import { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { Contactlist } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Contactlist>\n      {filteredContacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact}></ContactItem>;\n      })}\n    </Contactlist>\n  );\n};\n","import styled from '@emotion/styled'\n\nexport const Input = styled.input`\nmargin-left: 5px;\nborder: 1px solid rgba(33, 33, 33, 0.2);;\nborder-radius: 4px;\noutline: 1px transparent;\ntransition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\nmargin-bottom: 10px;\n\n:focus {\n    border-color: blue;\n    \n  }\n` \n\nexport const Button = styled.button`\ncursor: pointer;\ntext-align: center;\nwidth: 50px;\nbackground-color: #fff;\nborder: none;\nbox-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.7);\nborder-radius: 4px;\nmargin-left: 5px;\n transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n:hover {\n    background-color: blue;\n    color: white;\n  }\n`\n\nexport const Finder = styled.p`\n margin-bottom: 5px;\n ` ","import React from \"react\";\nimport { Input, Button, Finder } from \"./Filter.styled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"redux/FilterSlice\";\n\nexport const Filter = () => {\n     const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(changeFilter(value));\n  };\n\n  const clearFilter = () => {\n    dispatch(changeFilter(''));\n  };\n\n    \n    return (<form action=\"\">\n        <Finder>Find contacts by name</Finder>\n        <Input type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        />\n        <Button onClick={clearFilter} >Clear</Button>\n   </form> )\n    \n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <section>\n            <h2>{title}</h2>\n            {children}\n        </section>\n        )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n}","import styled from '@emotion/styled'\n\nexport const FormWrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`\n\nexport const Button = styled.button`\ncursor: pointer;\n  display: block;\n  text-align: center;\nwidth: 100px;\nbackground-color: #fff;\nborder: none;\nbox-shadow: 2px 2px 5px 1px rgba(0, 0, 0, 0.7);\nborder-radius: 4px;\n\n \n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n:hover {\n    background-color: blue;\n    color: white;\n  }\n`\n\nexport const Input = styled.input`\n    margin-left: 5px;\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    outline: transparent 1px;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n:focus {\n    border-color: blue;\n    \n  }\n` \n","\n\nexport const Selectitems = state => state.contacts.items\n\nexport const SelectIsLoading = state => state.contacts.isLoading\n\nexport const Selecterror = state => state.contacts.error\n\nexport const Selectfilter = state => state.filter","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { Button, Input, FormWrapper } from './Form.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Operations';\nimport { Selectitems } from 'redux/Selectors';\n\nexport const FormHooks= () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(Selectitems);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name: name,\n      phone: number\n    };\n\n    const alreadyExists = contacts.findIndex(item => {\n      const name = item.name.toLowerCase();\n      const newName = contact.name.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      Notify.failure(`${contact.name} is already added to contact list`);\n      return;\n    } else {\n   dispatch(addContact(contact))\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n   <form onSubmit={handleFormSubmit}>\n<FormWrapper>\n            <label htmlFor=\"name\">Name\n          <Input\n  type=\"text\"\n      name=\"name\"\n      value={name}\n      onChange={handleInputChange}\n  pattern= \"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                            required />\n                    </label>\n                     <label htmlFor=\"number\">Number\n                <Input\n                  type=\"tel\"\n                  name=\"number\"\n                  value={number}\n                  onChange={handleInputChange}\n  pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n  required\n/></label>\n        <Button type=\"submit\">Add Contact</Button>\n          </FormWrapper>\n          \n    </form>\n      )\n}","import React,{ useEffect } from \"react\";\nimport { ContactList } from \"../components/PhoneBookComponents/ContactList/ContactList\";\nimport { Filter } from \"../components/PhoneBookComponents/Filter/Filter\";\nimport { Section } from \"../components/Section/Section\";\nimport { FormHooks } from \"../components/PhoneBookComponents/Form/FormHoocks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/Operations\";\nimport { SelectIsLoading } from \"redux/Selectors\";\nimport { Bars } from \"react-loader-spinner\";\n\n\n const Contacts = () => {\n const isLoading = useSelector(SelectIsLoading);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <FormHooks />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n      </Section>\n     {isLoading && (\n        <div style={{justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: 20,\n            position: 'fixed',\n            top: 100,\n            right: 130,}}>\n         <Bars\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  ariaLabel=\"bars-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n          <span>Loading...</span>\n        </div>\n      )}\n      <ContactList />\n    </>\n  );\n}\n\nexport default Contacts"],"names":["Button","styled","Item","ContactItem","contact","dispatch","useDispatch","id","name","phone","type","onClick","deleteContact","Contactlist","ContactList","contacts","useSelector","state","items","filter","filteredContacts","normalizedFilter","toLowerCase","trim","includes","getFilteredContacts","map","Input","Finder","Filter","action","value","onChange","event","currentTarget","changeFilter","Section","title","children","FormWrapper","Selectitems","SelectIsLoading","isLoading","FormHooks","useState","setName","number","setNumber","handleInputChange","onSubmit","preventDefault","findIndex","item","Notify","addContact","htmlFor","pattern","required","useEffect","fetchContacts","style","justifyContent","alignItems","marginTop","position","top","right","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}