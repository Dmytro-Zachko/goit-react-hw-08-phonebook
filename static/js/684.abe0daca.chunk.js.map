{"version":3,"file":"static/js/684.abe0daca.chunk.js","mappings":"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","sources":["components/PhoneBookComponents/ContactList/ContactItem/ContactItem.styled.jsx","components/PhoneBookComponents/ContactList/ContactItem/ContactItem.jsx","components/PhoneBookComponents/ContactList/ContactList.styled.jsx","components/PhoneBookComponents/ContactList/ContactList.jsx","components/PhoneBookComponents/Filter/Filter.jsx","components/Section/Section.jsx","redux/Selectors.js","components/PhoneBookComponents/Form/FormHoocks.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled'\n\nexport const Button = styled.button`\ncursor: pointer;\ntext-align: center;\nwidth: 50px;\nbackground-color: #fff;\nborder: none;\nborder-radius: 4px;\nmargin-left: 5px;\nborder: 1px solid rgba(33, 33, 33, 0.2);\noutline: 1px transparent;\n`\n\nexport const Item = styled.span`\nmargin-right: 5px;\n`\n","import PropTypes from 'prop-types';\nimport { Button, Item} from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/Operations';\n\nexport const ContactItem = ({ contact }) => {\n const dispatch = useDispatch();\n  const { id, name, number } = contact;\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n       <li>\n        <span>{name}</span>: <Item>{number}</Item>\n\n        <Button type=\"button\" onClick={handleDelete}>\n          Delete\n        </Button>\n      </li>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};","import styled from '@emotion/styled'\n\nexport const Contactlist = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\n`","import { useSelector } from 'react-redux';\nimport { ContactItem } from './ContactItem/ContactItem';\nimport { Contactlist } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Contactlist>\n      {filteredContacts.map(contact => {\n        return <ContactItem key={contact.id} contact={contact}></ContactItem>;\n      })}\n    </Contactlist>\n  );\n};\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"redux/FilterSlice\";\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\n\nexport const Filter = () => {\n     const filter = useSelector(state => state.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilterChange = event => {\n    const { value } = event.currentTarget;\n    dispatch(changeFilter(value));\n  };\n\n  const clearFilter = () => {\n    dispatch(changeFilter(''));\n  };\n\n  return (<Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Box component=\"form\"  noValidate sx={{ mt: 1 }}>\n             <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"filter\"\n              label=\"Filter\"\n              name=\"filter\"\n            autoComplete=\"Filter\"\n            value={filter}\n            autoFocus\n            onChange={handleFilterChange}\n            />\n            <Button\n              type=\"button\"\n              fullWidth\n          variant=\"contained\"\n          onClick={clearFilter}\n              sx={{ mt: 3, mb: 2, }}\n            >\n              Clear\n            </Button>\n          </Box>\n        </Box>\n      </Container>   )\n    \n}","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n    return (\n        <section>\n            <h2 style={{textAlign: \"center\",fontWeight: 500,\n    fontSize: 48,marginBottom: -50}}>{title}</h2>\n            {children}\n        </section>\n        )\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n}","\n\nexport const Selectitems = state => state.contacts.items\n\nexport const SelectIsLoading = state => state.contacts.isLoading\n\nexport const Selecterror = state => state.contacts.error\n\nexport const Selectfilter = state => state.filter","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/Operations';\nimport { Selectitems } from 'redux/Selectors';\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\n\nexport const FormHooks= () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(Selectitems);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = {\n      name: name,\n      number: number\n    };\n\n    const alreadyExists = contacts.findIndex(item => {\n      const name = item.name.toLowerCase();\n      const newName = contact.name.toLowerCase();\n      return name === newName;\n    });\n\n    if (alreadyExists >= 0) {\n      Notify.failure(`${contact.name} is already added to contact list`);\n      return;\n    } else {\n   dispatch(addContact(contact))\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n<Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Box component=\"form\" onSubmit={handleSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Name\"\n              name=\"name\"\n            autoComplete=\"Name\"\n            value={name}\n            autoFocus\n            onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"number\"\n              label=\"Number\"\n              type=\"Number\"\n              id=\"Number\"\n              value={number}\n            autoComplete=\"Number\"\n            onChange={handleInputChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Add Contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>      \n)\n}","import React,{ useEffect } from \"react\";\nimport { ContactList } from \"../components/PhoneBookComponents/ContactList/ContactList\";\nimport { Filter } from \"../components/PhoneBookComponents/Filter/Filter\";\nimport { Section } from \"../components/Section/Section\";\nimport { FormHooks } from \"../components/PhoneBookComponents/Form/FormHoocks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/Operations\";\nimport { SelectIsLoading } from \"redux/Selectors\";\nimport { Bars } from \"react-loader-spinner\";\n\n\n const Contacts = () => {\n const isLoading = useSelector(SelectIsLoading);\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <FormHooks />\n      </Section>\n\n      <Section title=\"Contacts\">\n        <Filter />\n      </Section>\n     {isLoading && (\n        <div style={{justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: 20,\n            position: 'fixed',\n            top: 100,\n            right: 130,}}>\n         <Bars\n  height=\"80\"\n  width=\"80\"\n  color=\"#4fa94d\"\n  ariaLabel=\"bars-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  visible={true}\n/>\n          <span>Loading...</span>\n        </div>\n      )}\n      <ContactList />\n    </>\n  );\n}\n\nexport default Contacts"],"names":["Button","styled","Item","ContactItem","contact","dispatch","useDispatch","id","name","number","type","onClick","deleteContact","Contactlist","ContactList","contacts","useSelector","state","items","filter","filteredContacts","normalizedFilter","toLowerCase","trim","includes","getFilteredContacts","map","Filter","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","noValidate","mt","TextField","margin","required","fullWidth","label","autoComplete","value","autoFocus","onChange","event","currentTarget","changeFilter","variant","mb","Section","title","children","style","textAlign","fontWeight","fontSize","marginBottom","Selectitems","SelectIsLoading","isLoading","FormHooks","useState","setName","setNumber","handleInputChange","onSubmit","preventDefault","findIndex","item","Notify","addContact","useEffect","fetchContacts","justifyContent","position","top","right","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible"],"sourceRoot":""}